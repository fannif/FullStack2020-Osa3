{"version":3,"sources":["services/numbers.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","delete","put","PersonForm","props","onSubmit","addNumber","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","newSearch","handleSearchChange","NumberLine","person","name","number","onClick","remove","Persons","persons","map","key","Notification","message","text","className","App","useState","setPersons","setNewName","setNewNumber","setNewSearch","setMessage","useEffect","numberService","startPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","num","window","confirm","find","p","returnedNumber","setTimeout","catch","error","concat","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb995a79.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\n    return request.then(response => response.data)\n}\n\nexport default { \n    getAll, \n    create, \n    remove,\n    update\n}","import React, { useState, useEffect } from 'react'\nimport numberService from './services/numbers'\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n  ])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [message, setMessage] = useState({text:null, type:'notify'})\n\n  useEffect(() => {\n    numberService\n      .getAll()\n      .then(startPersons => {\n        setPersons(startPersons)\n      })\n  }, [])\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()))\n\n  const handleNameChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n      setNewSearch(event.target.value)\n  }\n\n  const addNumber = (event) => {\n      event.preventDefault()\n      const num = {name: newName, number: newNumber}\n      const names = persons.map(person => person.name)\n\n      if (names.includes(newName)) {\n          const replace = window.confirm(`${newName} is already added to phonebook. Replace the old number with a new one?`)\n          \n          if (!replace) {\n            return\n          }\n\n          const id = persons.find(p => p.name === newName).id\n          numberService.update(id, num)\n            .then(returnedNumber => {\n              setPersons(persons.map(number => number.id !== id ? number : returnedNumber))\n              setNewName('')\n              setNewNumber('')\n              setMessage({text:`Updated ${num.name}`, type:'notify'})\n              setTimeout(() => {\n              setMessage({text:null, type:'notify'})\n              }, 5000)  \n            })\n            .catch(error => {\n              setPersons(persons.filter(p => p.id !== id))\n              setMessage({text:`Information of ${newName} has already been deleted from the server`, type:'error'})\n              setTimeout(() => {\n              setMessage({text:null, type:'notify'})\n              }, 5000)  \n            })\n          return\n      }\n\n      numberService\n        .create(num)\n        .then(returnedNumber => {\n          setPersons(persons.concat(returnedNumber))\n          setNewName('')\n          setNewNumber('')\n          setMessage({text:`Added ${num.name}`, type:'notify'})\n          setTimeout(() => {\n            setMessage({text:null, type:'notify'})\n          }, 5000)  \n        }) \n  }\n\n  const deleteNumber = (toDelete) => {\n    if (window.confirm(`Delete ${toDelete.name}?`)) {\n      numberService\n        .remove(toDelete.id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== toDelete.id))\n          setMessage({text:`Deleted ${toDelete.name}`, type:'notify'})\n          setTimeout(() => {\n            setMessage({text:null, type:'notify'})\n          }, 5000)  \n        })\n        .catch(error => {\n          setPersons(persons.filter(person => person.id !== toDelete.id))\n          setMessage({text:`This number has already been deleted from the server`, type:'error'})\n          setTimeout(() => {\n            setMessage({text:null, type:'notify'})\n          }, 5000)  \n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message = {message} />\n      <Filter newSearch = {newSearch} handleSearchChange = {handleSearchChange} />\n      <h2>Add a new number</h2>\n      <PersonForm addNumber = {addNumber} newName = {newName} newNumber = {newNumber} handleNameChange = {handleNameChange} handleNumberChange = {handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons = {personsToShow} remove = {deleteNumber} />\n    </div>\n  )\n\n}\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit = {props.addNumber}>\n        <div>\n          name: <input value = {props.newName} onChange = {props.handleNameChange} />\n        </div>\n        <div>\n          number: <input value = {props.newNumber} onChange = {props.handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nconst Filter = (props) => {\n    return (\n        <div>Filter shown with <input value = {props.newSearch} onChange = {props.handleSearchChange} /></div>\n    )\n}\n\nconst NumberLine = (props) => {\n    return (\n      <li>\n        {props.person.name} {props.person.number} \n        <button onClick = {props.remove}>Delete</button>\n      </li>\n    )\n}\n\nconst Persons = (props) => {\n    return (\n      <ul>\n          {props.persons.map(person => <NumberLine key={person.name} person = {person} remove = {() => props.remove(person)} />)}\n      </ul>\n    )\n}\n\nconst Notification = (props) => {\n  if (props.message.text === null) {\n    return null\n  }\n  return (\n    <div className = {props.message.type}>{props.message.text}</div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}